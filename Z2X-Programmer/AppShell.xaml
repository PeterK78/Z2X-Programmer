<?xml version="1.0" encoding="utf-8" ?>

<!--

Z2X-Programmer
Copyright (C) 2025
PeterK78

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see:

https://github.com/PeterK78/Z2X-Programmer?tab=GPL-3.0-1-ov-file.
    
-->
    
<Shell  xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
        xmlns:local="clr-namespace:Z2XProgrammer"
        xmlns:pages="clr-namespace:Z2XProgrammer.Pages"
        xmlns:strings="clr-namespace:Z2XProgrammer.Resources.Strings"
        xmlns:viewmodel="clr-namespace:Z2XProgrammer.ViewModel"
        x:DataType="viewmodel:AppShellViewModel"
        x:Class="Z2XProgrammer.AppShell"
        BackgroundColor="{AppThemeBinding Light={StaticResource TitleBarBackground_Light}, Dark={StaticResource TitleBarBackground_Dark}}"
        Shell.FlyoutBehavior="{OnIdiom  Flyout, Tablet=Locked, Desktop=Locked}"
        Shell.FlyoutBackdrop="{AppThemeBinding Light={StaticResource FlyOutBackgroundColor_Light}, Dark={StaticResource FlyOutBackgroundColor_Dark}}"
        Shell.FlyoutBackgroundColor = "{AppThemeBinding Light={StaticResource FlyOutBackgroundColor_Light}, Dark={StaticResource FlyOutBackgroundColor_Dark}}"
        Shell.NavBarHasShadow="True"
        Shell.NavBarIsVisible="True"
        Shell.TabBarTitleColor= "{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Secondary}}"
        Shell.TabBarForegroundColor= "{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Primary}}"
        Shell.TabBarUnselectedColor = "{AppThemeBinding Light={StaticResource ButtonText_Light}, Dark={StaticResource ButtonText_Dark}}"
        Shell.ForegroundColor ="{AppThemeBinding Light={StaticResource FlyOutHamburgerIconColor_Light}, Dark={StaticResource FlyOutHamburgerIconColor_Dark}}"
        Title="{Binding ApplicationTitle}"
        >
    
    <!-- The flyout header with the command station state and the locomotive image -->
    <Shell.FlyoutHeader>
        <VerticalStackLayout>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.Column="0" TextColor="{Binding CommandStationConnectionStateColor}" Margin="20,10,20,0" Text="{Binding CommandStationState}"  ImageSource="{AppThemeBinding Light=ic_fluent_speaker_commandstation_24_regular.png, Dark=ic_fluent_speaker_commandstation_24_dark.png}" Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=ConnectCommandStationCommand}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonCommandStationState}" HorizontalOptions="CenterAndExpand" />
                <ActivityIndicator Grid.Row="0" Grid.Column="0" IsVisible="{Binding ConnectingOngoing}" HorizontalOptions="Center" IsRunning="{Binding ConnectingOngoing}"></ActivityIndicator>
            </Grid>
            
            <Grid Margin="0,30,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ImageButton Grid.Row="0" Grid.Column="0" Style="{StaticResource Z2XProgrammerLocoListButtonStyle}" HorizontalOptions="Center" Source="{Binding LocomotiveImageSource}" HeightRequest="80" Aspect="AspectFit" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=GetLocomotiveListCommand}"></ImageButton>
                <ActivityIndicator Grid.Row="0" Grid.Column="0" IsVisible="{Binding ActivityReadWriteCVOngoing}" HorizontalOptions="Center" IsRunning="{Binding ActivityReadWriteCVOngoing}"></ActivityIndicator>
            </Grid>
            
            <Label Margin="0,2,0,0" HorizontalOptions="Center" Text="{Binding LocomotiveDescription}" Style="{StaticResource Z2XProgrammerLabelLocoInfoStyle}"></Label>
            <HorizontalStackLayout Margin="0,0,0,20" HorizontalOptions="Center" HeightRequest="20" >                
                <Image Margin="2,0,0,0" IsVisible="{Binding DataStoreDataValid}" HeightRequest="16" Source="{AppThemeBinding Light=ic_fluent_card_ui_24_regular.png, Dark=ic_fluent_card_ui_24_dark.png}" VerticalOptions="Center" ></Image>
                <Label IsVisible="{Binding DataStoreDataValid}" Margin="2,0,0,0" Text="{Binding LocomotiveAddress}" FontSize="10" VerticalOptions="Center" ></Label>
            </HorizontalStackLayout>
        </VerticalStackLayout>
    </Shell.FlyoutHeader>
    
    <!-- The toolbar -->
    <Shell.TitleView>
        <StackLayout Orientation="Horizontal"  VerticalOptions="EndAndExpand" Margin="{OnPlatform '40,0,0,0', iOS='0,0,0,0', Android='0,0,0,0'}">

            <!--  New project -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_form_new_24_regular.png, Dark=ic_fluent_form_new_24_dark.png}" Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=NewCommand}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuNewFileTooltip}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>

            <!-- Open Z2X-project -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_folder_open_24_regular.png, Dark=ic_fluent_folder_open_24_dark.png}" Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=OpenZ2XFileCommand}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuOpenFileTooltip}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>                    
                </Button.Text>
            </Button>

            <!-- Undo last step  -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_arrow_undo_24_regular.png, Dark=ic_fluent_arrow_undo_24_dark.png}" Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=UndoCommand}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuUndo}" HorizontalOptions="End" IsEnabled="{Binding UndoAvailable}">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>
      
            <!-- Save Z2X-project -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_save_24_regular.png, Dark=ic_fluent_save_24_dark.png}" IsVisible="{Binding DataStoreDataValid}"  Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuSaveFileText}"  CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=SaveZ2XFileCommand}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>

            <!-- Upload decoder data -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_arrow_upload_24_regular.png, Dark=ic_fluent_arrow_upload_24_dark.png}" Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuReadDecoderText}"  CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=UploadDecoderCommand}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>

            <!-- Download decoder data -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_arrow_download_24_regular.png , Dark=ic_fluent_arrow_download_24_dark.png}" IsVisible="{Binding DataStoreDataValid}"   Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuWriteDecoderText}"  CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=DownloadDecoderCommand}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>

            <!-- Download decoder data (only differences) -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_arrow_download_diff_24_regular.png , Dark=ic_fluent_arrow_download_diff_24_dark.png}" IsVisible="{Binding DataStoreDataValid}"   Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuWriteDecoderDiffText}"  CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=DownloadDiffDecoderCommand}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>
            
            
            <!-- Programming mode selection (Programming track, Main track)
            
                 Note:
                 Desktop: The minimum width must not be less than the value 180. Otherwise the German text “Programmiergleis” will be cut off.
            -->
            <Picker Style="{StaticResource Z2XProgrammerPickerStyle}"  ItemsSource="{Binding AvailableProgrammingModes}" SelectedItem="{Binding SelectedProgrammingMode}">
                <Picker.WidthRequest>
                    <OnIdiom Default="180" Desktop="180" Tablet="180" Phone="170"></OnIdiom>                    
                </Picker.WidthRequest>
            </Picker>

            <!-- Decoder specification selection
            
                 Note:   
                 Desktop: The minimum width must not be less than the value 270. Otherwise the German text “RCN 225 Standard decoder” will be cut off.
            
            -->
            <Picker Style="{StaticResource Z2XProgrammerPickerStyle}" ItemsSource="{Binding AvailableDecSpecs}" SelectedItem="{Binding SelectedDecSpeq}"  ToolTipProperties.Text="{Binding SelectedDecSpecNotes}" >
                <Picker.WidthRequest>
                    <OnIdiom Default="265" Desktop="270" Tablet="260" Phone="240"></OnIdiom>
                </Picker.WidthRequest>
            </Picker>

            <!-- Extended menu items dropdown -->
            <Button ImageSource="{AppThemeBinding Light=ic_fluent_more_horizontal_24_regular.png , Dark=ic_fluent_more_horizontal_24_dark.png}"  Style="{StaticResource Z2XProgrammerToolBarButtonStyle}" ToolTipProperties.Text="{x:Static strings:AppResources.ButtonMainMenuWriteDecoderDiffText}"  CommandParameter="{Binding .}" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:AppShellViewModel}}, Path=OpenExtendedMenuItemPopupCommand}" HorizontalOptions="End">
                <Button.Text>
                    <OnIdiom Default="" Phone=""></OnIdiom>
                </Button.Text>
            </Button>

        </StackLayout>
    </Shell.TitleView>


    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemAddressText}" Icon="{AppThemeBinding Light=ic_fluent_card_ui_24_regular.png, Dark=ic_fluent_card_ui_24_dark.png}">
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:AddressPage}"  Route="AddressPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemDecoderInformationText}" Icon="{AppThemeBinding Light=ic_fluent_info_24_regular.png, Dark=ic_fluent_info_24_dark.png}">
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:DecoderInformationPage}" Route="DecoderInformationPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemDriveCharacteristicsText}" Icon="{AppThemeBinding Light=ic_fluent_transmission_24_filled.png, Dark=ic_fluent_transmission_24_dark.png}">
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:DriveCharacteristicsPage}" Route="DriveCharacteristicsPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FyoutItemMotorCharacteristicsText}" Icon="{AppThemeBinding Light=ic_fluent_engine_24_regular.png, Dark=ic_fluent_engine_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:MotorCharacteristicsPage}" Route="MotorCharacteristicsPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemFunctionKeysTitle}" Icon="{AppThemeBinding Light=ic_fluent_keyboard_123_24_regular.png, Dark=ic_fluent_keyboard_123_24_dark.png}">
        <ShellContent Title="{x:Static strings:AppResources.FunctionKeysVehicleAddressTabTitle}" ContentTemplate="{DataTemplate pages:FunctionKeysPage}" Route="FunctionKeysPage"/>
        <ShellContent Title="{x:Static strings:AppResources.FunctionKeysSecondaryAddressTabTitle}" ContentTemplate="{DataTemplate pages:FunctionKeysSecondaryAddressPage}" Route="FunctionKeysSecondaryAddressPage" />
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemFunctionOutputsTitle}" Icon="{AppThemeBinding Light=ic_fluent_developer_board_24_regular.png, Dark=ic_fluent_developer_board_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:FunctionOutputsPage}" Route="FunctionOutputsPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemProtocolTitle}" Icon="{AppThemeBinding Light=ic_fluent_arrows_bidirectional_24_regular.png, Dark=ic_fluent_arrows_bidirectional_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:RailComPage}"  Route="RailComPage"/>
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemSecurityTitle}" Icon="{AppThemeBinding Light=ic_fluent_shield_24_regular.png, Dark=ic_fluent_shield_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:SecurityPage}" Route="SecurityPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemLightText}" Icon="{AppThemeBinding Light=ic_fluent_lightbulb_24_regular.png, Dark=ic_fluent_lightbulb_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:LightPage}" Route="LightPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemSoundText}" Icon="{AppThemeBinding Light=ic_fluent_speaker_2_24_regular.png, Dark=ic_fluent_speaker_2_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:SoundPage}"  Route="SoundPage"/>
        </Tab>
    </FlyoutItem>
    
     <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemControllerText}" Icon="{AppThemeBinding Light=ic_fluent_xbox_controller_24_regular.png, Dark=ic_fluent_xbox_controller_24_dark.png}" >
        <Tab>
             <ShellContent ContentTemplate="{DataTemplate pages:ControllerPage}" Route="ControllerPage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemMaintenanceText}" Icon="{AppThemeBinding Light=ic_fluent_wrench_screwdriver_24_regular.png, Dark=ic_fluent_wrench_screwdriver_24_dark.png}" >
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:MaintenancePage}" Route="MaintenancePage" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem FlyoutDisplayOptions="AsMultipleItems">
        <Tab Title="{x:Static strings:AppResources.FlyoutItemExpertTitle}" Icon="{AppThemeBinding Light=ic_fluent_toolbox_24_regular.png, Dark=ic_fluent_toolbox_24_dark.png}">
            <ShellContent Title="{x:Static strings:AppResources.FlyoutItemExpertTitle}" ContentTemplate="{DataTemplate pages:ExpertPage}" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem FlyoutDisplayOptions="AsMultipleItems">
        <Tab Title="{x:Static strings:AppResources.FlyoutItemSettingsSearchTitle}" Icon="{AppThemeBinding Light=ic_fluent_search_24_regular.png, Dark=ic_fluent_search_24_dark.png}">
            <ShellContent Title="{x:Static strings:AppResources.FlyoutItemSettingsSearchTitle}" ContentTemplate="{DataTemplate pages:SettingsSearchPage}" />
        </Tab>
    </FlyoutItem>


    <FlyoutItem Title="{x:Static strings:AppResources.ButtonMainMenuSettingsText}" Icon="{AppThemeBinding Light=ic_fluent_settings_24_regular.png, Dark=ic_fluent_settings_24_dark.png}">
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:SettingsPage}" />
        </Tab>
    </FlyoutItem>

    <FlyoutItem Title="{x:Static strings:AppResources.FlyoutItemInfoText}" Icon="{AppThemeBinding Light=ic_fluent_info_24_regular.png, Dark=ic_fluent_info_24_dark.png}">
        <Tab>
            <ShellContent ContentTemplate="{DataTemplate pages:InfoPage}" />
        </Tab>
    </FlyoutItem>

</Shell>