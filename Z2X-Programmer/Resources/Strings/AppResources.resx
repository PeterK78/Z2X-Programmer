<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlertAttention" xml:space="preserve">
    <value>Attention!</value>
  </data>
  <data name="AlertDecoderDonwloadSuccessfull" xml:space="preserve">
    <value>The settings have been successfully written to the decoder.</value>
  </data>
  <data name="AlertDecoderDownloadError" xml:space="preserve">
    <value>The settings could not be written to the decoder. Check the following settings:

• Address
• Network connection to your digital central unit
• Programming method (POM or programming track)</value>
  </data>
  <data name="AlertDecoderUploadErrorPart1" xml:space="preserve">
    <value>Could not read configuration variable</value>
  </data>
  <data name="AlertDecoderUploadSuccess" xml:space="preserve">
    <value>The data was successfully read from the decoder.</value>
  </data>
  <data name="AlertDecSpecFilesOK" xml:space="preserve">
    <value>The decoder specifications are OK. No problems were found.</value>
  </data>
  <data name="AlertDeqSpecFileNotRead" xml:space="preserve">
    <value>The following error was found in a decoder specification:</value>
  </data>
  <data name="AlertError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="AlertInformation" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="AlertLocomotiveAddressNotZero" xml:space="preserve">
    <value>The locomotive address must not be 0. Change the locomotive address and restart the upload.</value>
  </data>
  <data name="AlertNewFile" xml:space="preserve">
    <value>Do you want to start with a new configuration? The current configuration will be deleted.</value>
  </data>
  <data name="AlertNoConnectionCentralStationError" xml:space="preserve">
    <value>No connection to your digital command station could be established.</value>
  </data>
  <data name="AlertNoConnectionCentralStationOK" xml:space="preserve">
    <value>The connection to your digital command station has been successfully established.</value>
  </data>
  <data name="AlertNoFeatureSupported" xml:space="preserve">
    <value>This decoder does not support any functions on this tab.</value>
  </data>
  <data name="AlertNoInformationAvailable" xml:space="preserve">
    <value>No data has been loaded yet. Open a Z2X file or read out a decoder.</value>
  </data>
  <data name="AlertNoReadAccessToFilesAndFolders" xml:space="preserve">
    <value>The file could not be read because access was denied. Make sure that Z2X-Programmer has the required access authorizations.</value>
  </data>
  <data name="AlertNoZ2XFileType" xml:space="preserve">
    <value>The file type of the selected file is unknown or is not Z2X. The file will not be opened.</value>
  </data>
  <data name="AlertResetSettings" xml:space="preserve">
    <value>Do you want to reset the settings? Z2X-Programmer will be closed automatically.</value>
  </data>
  <data name="AlertWrongIPAddressFormat" xml:space="preserve">
    <value>The format of the IP address is not correct. Please check your IP address.</value>
  </data>
  <data name="AlertZ2XFileNotRead" xml:space="preserve">
    <value>The Z2X file could not be opened.

The following error has occurred:</value>
  </data>
  <data name="AlertZ2XFileNotSaved" xml:space="preserve">
    <value>The decoder settings could not be saved.</value>
  </data>
  <data name="ButtonCommandStationState" xml:space="preserve">
    <value>Shows the current operating mode of the digital command station.</value>
  </data>
  <data name="ButtonMainMenuNewFileTooltip" xml:space="preserve">
    <value>New decoder configuration</value>
  </data>
  <data name="ButtonMainMenuOpenFileText" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ButtonMainMenuOpenFileTooltip" xml:space="preserve">
    <value>Open Z2X file</value>
  </data>
  <data name="ButtonMainMenuReadDecoderText" xml:space="preserve">
    <value>Read decoder</value>
  </data>
  <data name="ButtonMainMenuSaveFileText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ButtonMainMenuSettingsText" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ButtonMainMenuWriteDecoderText" xml:space="preserve">
    <value>Writes all values to the decoder</value>
  </data>
  <data name="ButtonResetZIMOErrorMemory" xml:space="preserve">
    <value>Reset error memory</value>
  </data>
  <data name="ButtonStartZIMOSelftTest" xml:space="preserve">
    <value>Start self-test</value>
  </data>
  <data name="CommandStationStateNormalMode" xml:space="preserve">
    <value>Normal mode</value>
  </data>
  <data name="CommandStationStateNotConnected" xml:space="preserve">
    <value>Not connected</value>
  </data>
  <data name="CommandStationStateProgrammingMode" xml:space="preserve">
    <value>Programming mode</value>
  </data>
  <data name="CommandStationStateShortCircuitMode" xml:space="preserve">
    <value>Short circuit</value>
  </data>
  <data name="CommandStationStateStopMode" xml:space="preserve">
    <value>STOP</value>
  </data>
  <data name="DCCABCBreakModeLeftTrack" xml:space="preserve">
    <value>Stop at higher voltage on left-hand track</value>
  </data>
  <data name="DCCABCBreakModeOff" xml:space="preserve">
    <value>Switched off</value>
  </data>
  <data name="DCCABCBreakModeRightTrack" xml:space="preserve">
    <value>Stop at higher voltage on right-hand track</value>
  </data>
  <data name="DCCAddressModeShort" xml:space="preserve">
    <value>Short locomotive addresses (1 - 127)</value>
  </data>
  <data name="DCCAddressModeLong" xml:space="preserve">
    <value>Long locomotive addresses (128 - 10239)</value>
  </data>
  <data name="DCCProgrammingModePOM" xml:space="preserve">
    <value>Main track</value>
  </data>
  <data name="DCCProgrammngModeProgramTrack" xml:space="preserve">
    <value>Programming track</value>
  </data>
  <data name="DCCSpeedStepMode14" xml:space="preserve">
    <value>14 speed steps</value>
  </data>
  <data name="DCCSpeedStepMode28128" xml:space="preserve">
    <value>28/128 speed steps</value>
  </data>
  <data name="DoehlerHaassMappingTypeExtended" xml:space="preserve">
    <value>Extended</value>
  </data>
  <data name="DoehlerHaassMappingTypeRCN225" xml:space="preserve">
    <value>Standard (RCN225 compatible)</value>
  </data>
  <data name="DownloadNewSettingsYesNo" xml:space="preserve">
    <value>Do you now want to transfer the changed settings to your decoder?</value>
  </data>
  <data name="DownloadNoCVsModified" xml:space="preserve">
    <value>No settings have been changed. No download is performed.</value>
  </data>
  <data name="FameSettingsZ21Title" xml:space="preserve">
    <value>Digital command station Z21</value>
  </data>
  <data name="FarmeSettingsZ21IPAddress" xml:space="preserve">
    <value>IP address</value>
  </data>
  <data name="FarmeSettingsZ21TimeOut" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="FilePickerOpenZ2XFileTitle" xml:space="preserve">
    <value>Select the z2x file</value>
  </data>
  <data name="FlyoutItemAddressText" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="FlyoutItemDecoderInformationText" xml:space="preserve">
    <value>Decoder information</value>
  </data>
  <data name="FlyoutItemDriveCharacteristicsText" xml:space="preserve">
    <value>Drive characteristics</value>
  </data>
  <data name="FlyoutItemExpertTitle" xml:space="preserve">
    <value>Expert functions</value>
  </data>
  <data name="FlyoutItemFunctionKeysTitle" xml:space="preserve">
    <value>Function keys</value>
  </data>
  <data name="FlyoutItemInfoText" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="FlyoutItemLightText" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="FlyoutItemMaintenanceText" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="FlyoutItemProtocolTitle" xml:space="preserve">
    <value>Protocols</value>
  </data>
  <data name="FlyoutItemSecurityTitle" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="FlyoutItemSettingsSearchTitle" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="FlyoutItemSoundText" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="FrameAddressModeDescription" xml:space="preserve">
    <value>The address mode determines whether vehicle addresses in the range from 1 to 127 or from 128 to 10239 are used. The standard range is 1 to 127.</value>
  </data>
  <data name="FrameAddressSecondAddressDescription" xml:space="preserve">
    <value>Use the second address to link the function decoder to the functions of a traction unit. This means that the lights, for example, can be activated at the touch of a button.</value>
  </data>
  <data name="FrameAddressSecondAddressLabel" xml:space="preserve">
    <value>Secondary address (CV64, CV67, CV68)</value>
  </data>
  <data name="FrameAddressSecondAddressModeLabel" xml:space="preserve">
    <value>Address mode of the second address (CV112.5)</value>
  </data>
  <data name="FrameAddressSecondAddressTitle" xml:space="preserve">
    <value>Secondary address</value>
  </data>
  <data name="FrameAddressVehicleAddressLabel" xml:space="preserve">
    <value>Vehicle address (CV1, CV17, CV18)</value>
  </data>
  <data name="FrameAddressVehicleAddressModeLabel" xml:space="preserve">
    <value>Address mode (CV29.5)</value>
  </data>
  <data name="FrameAddressVehicleAddressModeTitle" xml:space="preserve">
    <value>Address mode</value>
  </data>
  <data name="FrameDecoderDescriptionDescription" xml:space="preserve">
    <value>Add user-specific information such as a short description, any notes or an image here.</value>
  </data>
  <data name="FrameDecoderDescriptionLabel" xml:space="preserve">
    <value>Short description</value>
  </data>
  <data name="FrameDecoderDescriptionPlaceholder" xml:space="preserve">
    <value>e. g. ÖBB1044 or ZIMO MX618</value>
  </data>
  <data name="FrameDecoderDescriptionTitle" xml:space="preserve">
    <value>User-specific</value>
  </data>
  <data name="FrameDecoderDoehlerAndHaasInfoDecoderType" xml:space="preserve">
    <value>Decoder type (CV261)</value>
  </data>
  <data name="FrameDecoderDoehlerAndHaasInfoTitle" xml:space="preserve">
    <value>Variant</value>
  </data>
  <data name="FrameDecoderDoehlerAndHaassInfoSWVersion" xml:space="preserve">
    <value>Software-Version (CV262 + CV264)</value>
  </data>
  <data name="FrameDecoderInfoPictureButton" xml:space="preserve">
    <value>Select image</value>
  </data>
  <data name="FrameDecoderInfoPictureTitle" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="FrameDecoderPersonalNotesTitle" xml:space="preserve">
    <value>Personal notes</value>
  </data>
  <data name="FrameDecoderZIMOCopyClipboard" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="FrameDecoderZIMOInfoBootloaderVersion" xml:space="preserve">
    <value>Bootloader version (CV248, CV249)</value>
  </data>
  <data name="FrameDecoderZIMOInfoDecoderID" xml:space="preserve">
    <value>Decoder ID (CV250, CV251, CV252, CV253)</value>
  </data>
  <data name="FrameDecoderZIMOInfoDecoderType" xml:space="preserve">
    <value>Decoder type (CV250)</value>
  </data>
  <data name="FrameDecoderZIMOInfoSWVersion" xml:space="preserve">
    <value>Software version (CV7 + CV65)</value>
  </data>
  <data name="FrameDecoderZIMOInfoTitle" xml:space="preserve">
    <value>Variant</value>
  </data>
  <data name="FrameDriveCharacteristicsAccDecAccTimeDescription" xml:space="preserve">
    <value>Time from standstill to maximum speed</value>
  </data>
  <data name="FrameDriveCharacteristicsAccDecAccTimeEnabledDisabled" xml:space="preserve">
    <value>Activate acceleration time (CV3)</value>
  </data>
  <data name="FrameDriveCharacteristicsAccDecDecTimeDescription" xml:space="preserve">
    <value>Time from maximum speed to standstill</value>
  </data>
  <data name="FrameDriveCharacteristicsAccDecTitle" xml:space="preserve">
    <value>Acceleration and deceleration</value>
  </data>
  <data name="FrameDriveCharacteristicsAccTimeEnabled" xml:space="preserve">
    <value>Use acceleration time</value>
  </data>
  <data name="FrameDriveCharacteristicsBrakingTrackABCLabel" xml:space="preserve">
    <value>Stop with asymmetric track signal (CV27.0, CV27.1)</value>
  </data>
  <data name="FrameDriveCharacteristicsBrakingTrackDescription" xml:space="preserve">
    <value>Configure the functions here for which the decoder automatically stops the vehicle.</value>
  </data>
  <data name="FrameDriveCharacteristicsBrakingTrackHLULabel" xml:space="preserve">
    <value>Activate ZIMO (HLU) braking distance (CV27.2)</value>
  </data>
  <data name="FrameDriveCharacteristicsBrakingTrackTitle" xml:space="preserve">
    <value>Braking tracks</value>
  </data>
  <data name="FrameDriveCharacteristicsConsistDirectionLabel" xml:space="preserve">
    <value>Direction in consist mode inverted (CV19.7)</value>
  </data>
  <data name="FrameDriveCharacteristicsDecTimeEnabled" xml:space="preserve">
    <value>Use breaking time</value>
  </data>
  <data name="FrameDriveCharacteristicsDecTimeLabel" xml:space="preserve">
    <value>Braking time (CV4)</value>
  </data>
  <data name="FrameDriveCharacteristicsDecTimeSliderToolTip" xml:space="preserve">
    <value>Set the braking time (CV value * 0.9 = braking time in seconds)</value>
  </data>
  <data name="FrameDriveCharacteristicsDecTimeSwitchToolTip" xml:space="preserve">
    <value>Activate this switch if you want to use a braking time</value>
  </data>
  <data name="FrameDriveCharacteristicsDirectionDescription" xml:space="preserve">
    <value>Use these options to reverse the direction of travel.</value>
  </data>
  <data name="FrameDriveCharacteristicsDirectionLabel" xml:space="preserve">
    <value>Direction of travel inverted (CV29.0)</value>
  </data>
  <data name="FrameDriveCharacteristicsTitle" xml:space="preserve">
    <value>Direction of travel</value>
  </data>
  <data name="FrameExpertCVListTitle" xml:space="preserve">
    <value>Configuration variables</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteButtonReadCV" xml:space="preserve">
    <value>Read CV</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteButtonWriteCV" xml:space="preserve">
    <value>Write CV</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteCVBits" xml:space="preserve">
    <value>Bits [7 ... 0]</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteCVLabel" xml:space="preserve">
    <value>CV number (1 - 1024)</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteCVValue" xml:space="preserve">
    <value>Value (0 - 255)</value>
  </data>
  <data name="FrameExpertSettingsCVReadWriteTitle" xml:space="preserve">
    <value>Read and write a CV</value>
  </data>
  <data name="FrameFunctionKeysCurveSquealLabel" xml:space="preserve">
    <value>Function key for switching the curve squeal on and off (CV308)</value>
  </data>
  <data name="FrameFunctionKeysDeactivateAccDecTimeLabel" xml:space="preserve">
    <value>Function key for deactivating the braking and acceleration time (CV156)</value>
  </data>
  <data name="FrameFunctionKeysDeactivateAccDecTimeFuncKeyDesc" xml:space="preserve">
    <value>Deactivating the braking and acceleration time</value>
  </data>
  <data name="FrameFunctionKeysDoehlerAndHaassDeactivateAccDecTimeLabel" xml:space="preserve">
    <value>Function button for deactivating the braking and acceleration time (CV133)</value>
  </data>
  <data name="FrameFunctionKeysMappingBackward" xml:space="preserve">
    <value>Backward</value>
  </data>
  <data name="FrameFunctionKeysMappingDescription" xml:space="preserve">
    <value>Assign function outputs to the function keys. If a function key is pressed, the assigned function output is switched.</value>
  </data>
  <data name="FrameFunctionKeysMappingForward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="FrameFunctionKeysMappingHeadeOutput" xml:space="preserve">
    <value>Function outputs</value>
  </data>
  <data name="FrameFunctionKeysMappingHeaderCV" xml:space="preserve">
    <value>CV</value>
  </data>
  <data name="FrameFunctionKeysMappingHeaderDirection" xml:space="preserve">
    <value>Direction</value>
  </data>
  <data name="FrameFunctionKeysMappingHeaderFunctionkey" xml:space="preserve">
    <value>Function key</value>
  </data>
  <data name="FrameFunctionKeysMappingHeadeValue" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="FrameFunctionKeysMappingStandardTitle" xml:space="preserve">
    <value>Mapping of the function outputs</value>
  </data>
  <data name="FrameFunctionKeysMappingTitle" xml:space="preserve">
    <value>Function outputs (CV33 - CV46)</value>
  </data>
  <data name="FrameFunctionKeysShuntingKey" xml:space="preserve">
    <value>Shunting key</value>
  </data>
  <data name="FrameFunctionKeysShuntingKeyDescription" xml:space="preserve">
    <value>If the shunting key is pressed, the shunting gear is activated</value>
  </data>
  <data name="FrameFunctionKeysShuntingKeyLabel" xml:space="preserve">
    <value>Function key for activating the shunting gear (CV132)</value>
  </data>
  <data name="FrameFunctionKeysSoundControlDescription" xml:space="preserve">
    <value>Here you define the function buttons with which you can switch the various sounds on and off.</value>
  </data>
  <data name="FrameFunctionKeysSoundControlTitle" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="FrameFunctionKeysSoundMuteLabel" xml:space="preserve">
    <value>Function button to fade the sound in and out (CV313)</value>
  </data>
  <data name="FrameFunctionKeysSoundVolumeControlDescription" xml:space="preserve">
    <value>Select the function buttons with which you want to turn the volume up or down.</value>
  </data>
  <data name="FrameFunctionKeysSoundVolumeControlTitle" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="FrameFunctionKeysSoundVolumeLouderLabel" xml:space="preserve">
    <value>Function button for increasing the volume (CV397)</value>
  </data>
  <data name="FrameFunctionKeysSoundVolumeOnOffLabel" xml:space="preserve">
    <value>Function button for switching the driving and random sounds on and off (CV310)</value>
  </data>
  <data name="FrameFunctionKeysSoundVolumeQuieterLabel" xml:space="preserve">
    <value>Function button to reduce the volume (CV396)</value>
  </data>
  <data name="FrameFunctionsKeysDoehlerAndHaassMappingType" xml:space="preserve">
    <value>Activate extended function mapping (CV137.4)</value>
  </data>
  <data name="FrameFunctionsKeysDoehlerAndHaassMappingTypeDescription" xml:space="preserve">
    <value>In addition to the function assignmIn addition to the function assignment according to RCN-225, Döhler &amp; Haass decoders also offer an extended version of the function assignment.ent according to RCN-225, Döhler &amp; Haass decoders offer additional variants of function assignment. However, Z2X-Programmer currently only supports the variant according to RCN-225.</value>
  </data>
  <data name="FrameFunctionsKeysZIMOMappingType" xml:space="preserve">
    <value>Activate extended assignment of function outputs (CV61)</value>
  </data>
  <data name="FrameFunctionsKeysZIMOMappingTypeDescription" xml:space="preserve">
    <value>In addition to the function assignment according to RCN-225, ZIMO decoders offer additional variants of function assignment. However, Z2X-Programmer currently only supports the variant according to RCN-225.</value>
  </data>
  <data name="FrameGenericDecoderInformationManufacturer" xml:space="preserve">
    <value>Manufacturer (CV8)</value>
  </data>
  <data name="FrameGenericDecoderInformationTitle" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="FrameGenericDecoderInformationVersionNumber" xml:space="preserve">
    <value>Version number (CV7)</value>
  </data>
  <data name="FrameInfoApplicationInformationTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="FrameInfoOpenSourceLibsTitle" xml:space="preserve">
    <value>Open source libraries</value>
  </data>
  <data name="FrameLicenseButtonLicenseText" xml:space="preserve">
    <value>Open license ...</value>
  </data>
  <data name="FrameLicenseButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="FrameLicenseButtonQuit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FrameLicenseCheckbox" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="FrameLicenseTitle" xml:space="preserve">
    <value>Copyright, disclaimer of warranty and liability</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA0r" xml:space="preserve">
    <value>Output 0 rear, dimming (CV114.1)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA0v" xml:space="preserve">
    <value>Output 0 front, dimming (CV114.0)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA1" xml:space="preserve">
    <value>Dimming output 1 (CV114.2)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA10" xml:space="preserve">
    <value>Dimming output 10 (CV152.3)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA11" xml:space="preserve">
    <value>Dimming output 11 (CV152.4)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA12" xml:space="preserve">
    <value>Dimming output 12 (CV152.5)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA2" xml:space="preserve">
    <value>Dimming output 2 (CV114.3)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA3" xml:space="preserve">
    <value>Dimming output 3 (CV114.4)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA4" xml:space="preserve">
    <value>Dimming output 4 (CV114.5)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA5" xml:space="preserve">
    <value>Dimming output 5 (CV114.6)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA6" xml:space="preserve">
    <value>Dimming output 6 (CV114.7)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA7" xml:space="preserve">
    <value>Dimming output 7 (CV152.0)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA8" xml:space="preserve">
    <value>Dimming output 8 (CV152.1)</value>
  </data>
  <data name="FrameLightBrigthnessOutputFA9" xml:space="preserve">
    <value>Dimming output 9 (CV152.2)</value>
  </data>
  <data name="FrameLightDimmingDescription" xml:space="preserve">
    <value>The dimming function can be used to reduce the voltage of individual function outputs. This function is used, for example, to reduce the brightness of LEDs.</value>
  </data>
  <data name="FrameLightDimmingEnabled" xml:space="preserve">
    <value>Activate dimming (CV60)</value>
  </data>
  <data name="FrameLightDimmingMasterValue" xml:space="preserve">
    <value>Brightness</value>
  </data>
  <data name="FrameLightDimmingOutputFA0r" xml:space="preserve">
    <value>Effect, output 0 rear (CV126)</value>
  </data>
  <data name="FrameLightDimmingOutputFA0v" xml:space="preserve">
    <value>Effect, output 0 front (CV125)</value>
  </data>
  <data name="FrameLightDimmingTitle" xml:space="preserve">
    <value>Dimming</value>
  </data>
  <data name="FrameLightEffectsDescription" xml:space="preserve">
    <value>Each function output can be assigned an individual light effect. If a function output cannot be configured ⛔, this output is already assigned to another function or effect.</value>
  </data>
  <data name="FrameLightEffectsTitle" xml:space="preserve">
    <value>Light effects</value>
  </data>
  <data name="FrameLocomotiveAddressConsistAdrDescription" xml:space="preserve">
    <value>Consist addresses are used when two or more locomotives are running in a group. The additional locomotives receive the vehicle address of the leading locomotive as the consist address. Addresses from 1 to 10239 are possible.</value>
  </data>
  <data name="FrameLocomotiveAddressConsistAdrLabel" xml:space="preserve">
    <value>Consist address (CV19, CV20)</value>
  </data>
  <data name="FrameLocomotiveAddressConsistAdrTitle" xml:space="preserve">
    <value>Consist address</value>
  </data>
  <data name="FrameLocomotiveAddressDescription" xml:space="preserve">
    <value>In regular operation, each decoder requires a unique vehicle address. Address 3 is used as standard. The only exception is programming on the programming track. In this operating mode, no vehicle address is required.</value>
  </data>
  <data name="FrameLocomotiveAddressPlaceholder" xml:space="preserve">
    <value>Vehicle address</value>
  </data>
  <data name="FrameVehicleAddressTitle" xml:space="preserve">
    <value>Vehicle address</value>
  </data>
  <data name="FrameLocomotiveAddressUseConsistAddressLabel" xml:space="preserve">
    <value>Use consist address (CV19, CV20)</value>
  </data>
  <data name="FrameMaintenanceSelfTestDescription" xml:space="preserve">
    <value>Perform a simple decoder self-test.</value>
  </data>
  <data name="FrameMaintenanceSelfTestLabel" xml:space="preserve">
    <value>Current error (CV30)</value>
  </data>
  <data name="FrameMaintenanceSelfTestTitle" xml:space="preserve">
    <value>Decoder self-test</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMaximumSliderTooltip" xml:space="preserve">
    <value>Sets the maximum speed (values from 2 - 255).</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMaximumSpeedDefaultEnabled" xml:space="preserve">
    <value>Use the decoder's default value for the maximum speed</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMaximumSpeedLabel" xml:space="preserve">
    <value>Maximum speed</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMaximumSpeedTitle" xml:space="preserve">
    <value>Maximum speed (CV5)</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMaximumSwitchTooltip" xml:space="preserve">
    <value>Activate this switch to use the standard maximum speed of the decoder.</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMediumSpeedTitle" xml:space="preserve">
    <value>Medium speed (CV6)</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveMinimumSpeedTitle" xml:space="preserve">
    <value>Minimum speed (CV2)</value>
  </data>
  <data name="FrameMotorCharacteristicsBasicCurveTitle" xml:space="preserve">
    <value>Standard speed characteristic curve</value>
  </data>
  <data name="FrameMotorCharacteristicsCharacteristicCurveTypeDescription" xml:space="preserve">
    <value>A distinction is made between the standard and the extended speed characteristic curve. The standard speed characteristic curve contains 3 characteristic curve points. The extended speed characteristic curve provides additional characteristic curve points. This allows finer control of the speed curve.</value>
  </data>
  <data name="FrameMotorCharacteristicsCharacteristicCurveTypeLabel" xml:space="preserve">
    <value>Use extended speed characteristic (CV29.4)</value>
  </data>
  <data name="FrameMotorCharacteristicsCharacteristicCurveTypeTitle" xml:space="preserve">
    <value>Type of speed characteristic curve</value>
  </data>
  <data name="FrameMotorCharacteristicsDHImpulswidth" xml:space="preserve">
    <value>Impuls width (CV49)</value>
  </data>
  <data name="FrameMotorCharacteristicsEMKGap" xml:space="preserve">
    <value>EMK measurement gap (CV9)</value>
  </data>
  <data name="FrameMotorCharacteristicsEMKRate" xml:space="preserve">
    <value>EMK sampling rate (CV9)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurve" xml:space="preserve">
    <value>Extended speed characteristic curve</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep10CV76" xml:space="preserve">
    <value>Curve point 10 (CV76)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep11CV77" xml:space="preserve">
    <value>Curve point 11 (CV77)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep12CV78" xml:space="preserve">
    <value>Curve point 12 (CV78)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep13CV79" xml:space="preserve">
    <value>Curve point 13 (CV79)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep14CV80" xml:space="preserve">
    <value>Curve point 14 (CV80)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep15CV81" xml:space="preserve">
    <value>Curve point 15 (CV81)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep16CV82" xml:space="preserve">
    <value>Curve point 16 (CV82)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep17CV83" xml:space="preserve">
    <value>Curve point 17 (CV83)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep18CV84" xml:space="preserve">
    <value>Curve point 18 (CV84)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep19CV85" xml:space="preserve">
    <value>Curve point 19 (CV85)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep1CV67" xml:space="preserve">
    <value>Curve point 1 (CV67)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep20CV86" xml:space="preserve">
    <value>Curve point 20 (CV86)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep21CV87" xml:space="preserve">
    <value>Curve point 21 (CV87)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep22CV88" xml:space="preserve">
    <value>Curve point 22 (CV88)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep23CV89" xml:space="preserve">
    <value>Curve point 23 (CV89)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep24CV90" xml:space="preserve">
    <value>Curve point 23 (CV90)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep25CV91" xml:space="preserve">
    <value>Curve point 24 (CV91)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep26CV92" xml:space="preserve">
    <value>Curve point 25 (CV92)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep27CV93" xml:space="preserve">
    <value>Curve point 26 (CV93)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep28CV94" xml:space="preserve">
    <value>Curve point  27 (CV94)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep2CV68" xml:space="preserve">
    <value>Curve point 2 (CV68)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep3CV69" xml:space="preserve">
    <value>Curve point 3 (CV69)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep4CV70" xml:space="preserve">
    <value>Curve point 4 (CV70)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep5CV71" xml:space="preserve">
    <value>Curve point 5 (CV71)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep6CV72" xml:space="preserve">
    <value>Curve point 6 (CV72)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep7CV73" xml:space="preserve">
    <value>Curve point 7 (CV73)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep8CV74" xml:space="preserve">
    <value>Curve point 8 (CV74)</value>
  </data>
  <data name="FrameMotorCharacteristicsExtendedSpeedCurveStep9CV75" xml:space="preserve">
    <value>Curve point  9 (CV75)</value>
  </data>
  <data name="FrameMotorCharacteristicsFrequency" xml:space="preserve">
    <value>Frequency (CV9)</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFreqType" xml:space="preserve">
    <value>Frequency type (CV9)</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyDefault" xml:space="preserve">
    <value>Use default setting (CV9)</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyDescription" xml:space="preserve">
    <value>The motor control frequency, the EMF sampling rate and the EMF measuring gaps can be configured. This allows the driving behavior as well as the noise development to be influenced.</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyEMKGapTooltip" xml:space="preserve">
    <value>Higher values may be necessary for round motors, lower values reduce drive noise and increase the performance of Faulhaber and Maxxon motors.</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyEMKRateTooltip" xml:space="preserve">
    <value>Higher values prevent jerking, lower values reduce drive noise.</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyHelp" xml:space="preserve">
    <value>Here you will find recommendations if the standard setting does not work satisfactorily.

Settings for new motors:

Frequency type = high frequency
Sampling rate = 9, measuring gap = 5 : Modern Roco or typical N-gauge locomotive
Sampling rate = 8, measuring gap = 9 : Fleischmann locomotive with “round motor”
Sampling rate = 5, measuring gap = 1 : Small Faulhaber motor (e.g. Maxxon etc.)
Sampling rate = 1, measuring gap = 1 : Large Faulhaber motor (H0 and 0)

Settings for old motors:
Frequency type = Low frequency</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyTitle" xml:space="preserve">
    <value>Motor control frequency, EMF sampling rate and EMF measurement gap</value>
  </data>
  <data name="FrameMotorCharacteristicsMotorControlFrequencyTypesTooltip" xml:space="preserve">
    <value>Select high frequency for new motors and low frequency for old motors.</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDDescription" xml:space="preserve">
    <value>By weighting the proportional and integral components of the engine control, the control behavior can be adapted to the engine type and vehicle weight.</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDIValueLabel" xml:space="preserve">
    <value>Integral value (CV56)</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDMotorType" xml:space="preserve">
    <value>Type of motor (CV56)</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDMotorTypeBellAnchor" xml:space="preserve">
    <value>Bell anchor</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDMotorTypeNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDPValueLabel" xml:space="preserve">
    <value>Proportional value (CV56)</value>
  </data>
  <data name="FrameMotorCharacteristicsPIDTitle" xml:space="preserve">
    <value>P and I value of the EMF load balancing control (CV56)</value>
  </data>
  <data name="FrameMotorCharacteristicsReferenceVoltage" xml:space="preserve">
    <value>Fixed reference voltage (CV57)</value>
  </data>
  <data name="FrameMotorCharacteristicsReferenceVoltageAutoMode" xml:space="preserve">
    <value>Automatic adjustment to the rail voltage (CV57)</value>
  </data>
  <data name="FrameMotorCharacteristicsReferenceVoltageDescription" xml:space="preserve">
    <value>The reference voltage defines the voltage that the decoder interprets as Vmax. Either the track voltage or a fixed defined value can be used. By using a fixed voltage value, the control behavior can be decoupled from the track voltage.</value>
  </data>
  <data name="FrameMotorCharacteristicsReferenceVoltageTitle" xml:space="preserve">
    <value>Reference voltage of the motor control</value>
  </data>
  <data name="FrameProtocolAnalogModeDescription" xml:space="preserve">
    <value>You can use these options to configure the analog operation of the decoder.</value>
  </data>
  <data name="FrameProtocolAnalogModeLabel" xml:space="preserve">
    <value>Activate analog mode (CV29.2)</value>
  </data>
  <data name="FrameProtocolAnalogModeTitle" xml:space="preserve">
    <value>Analog mode</value>
  </data>
  <data name="FrameProtocolDCCADescription" xml:space="preserve">
    <value>Activate automatic registration via RCN-218 or RailComPlus®.</value>
  </data>
  <data name="FrameProtocolDCCALabel" xml:space="preserve">
    <value>Activate automatic login (CV28.7)</value>
  </data>
  <data name="FrameProtocolDCCATitle" xml:space="preserve">
    <value>Automatic registration</value>
  </data>
  <data name="FrameRailComConfigurationAddressBroadCast" xml:space="preserve">
    <value>Send address via broadcast on channel 1 (CV28.0)</value>
  </data>
  <data name="FrameRailComConfigurationDataChannel2" xml:space="preserve">
    <value>Activate data transmission on channel 2 (CV28.1)</value>
  </data>
  <data name="FrameRailComConfigurationDataChannel2Desc" xml:space="preserve">
    <value>If this function is activated, the decoder can be read out and written to directly on the main track in POM programming mode.</value>
  </data>
  <data name="FrameRailComConfigurationTitle" xml:space="preserve">
    <value>RailCom configuration</value>
  </data>
  <data name="FrameRailComEnableDisableRailCom" xml:space="preserve">
    <value>Enable RailCom® bidirectional communication (CV29.3)</value>
  </data>
  <data name="FrameRailComEnableDisableTitle" xml:space="preserve">
    <value>RailCom®</value>
  </data>
  <data name="FrameSearchNothingFound" xml:space="preserve">
    <value>No settings were found</value>
  </data>
  <data name="FrameSearchPlaceHolder" xml:space="preserve">
    <value>Enter search term (at least 3 characters) ...</value>
  </data>
  <data name="FrameSecurityDecoderLockActivated" xml:space="preserve">
    <value>The decoder lock is active (CV15 &lt;&gt; CV16). The decoder cannot be programmed.</value>
  </data>
  <data name="FrameSecurityDecoderLockDescription" xml:space="preserve">
    <value>If the decoder lock is active, the decoder can neither be read nor written to. The lock is activated by entering different values in CV15 and CV16. CV15 can always be written to.</value>
  </data>
  <data name="FrameSecurityDecoderLockLabelCV15" xml:space="preserve">
    <value>Decoder lock (CV15)</value>
  </data>
  <data name="FrameSecurityDecoderLockLabelCV16" xml:space="preserve">
    <value>Decoder lock (CV16)</value>
  </data>
  <data name="FrameSecurityDecoderLockNotActivated" xml:space="preserve">
    <value>The decoder lock is not active (CV15 = CV16). The decoder can be programmed.</value>
  </data>
  <data name="FrameSecurityDecoderLockTitle" xml:space="preserve">
    <value>Decoder lock</value>
  </data>
  <data name="FrameSecurityDecoderResetButtonLabel" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="FrameSecurityDecoderResetButtonMessage" xml:space="preserve">
    <value>Do you really want to reset the decoder? All user-specific settings will be lost.</value>
  </data>
  <data name="FrameSecurityDecoderResetLabel" xml:space="preserve">
    <value>This function resets the decoder to the manufacturer's default values. All user-specific settings are lost (CV8 = 8).</value>
  </data>
  <data name="FrameSecurityDecoderResetNoPOMMode" xml:space="preserve">
    <value>A decoder reset can only be done on the programming track.</value>
  </data>
  <data name="FrameSecurityDecoderResetResetPerformed" xml:space="preserve">
    <value>The decoder reset has been carried out. Wait some minutes to initialize the decoder. Afterwards reload the settings from the decoder.</value>
  </data>
  <data name="FrameSecurityDecoderResetTitle" xml:space="preserve">
    <value>Decoder reset</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockFirmwareUpdate" xml:space="preserve">
    <value>Disable updating of the decoder firmware (CV144, bit 7)</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockJingleSound" xml:space="preserve">
    <value>Playing a sound when writing a CV (CV144, bit 4)</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockProgramCVMainTrack" xml:space="preserve">
    <value>Disable writing of CVs on the main track (CV144, bit 3)</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockProgramCVServiceMode" xml:space="preserve">
    <value>Disable writing of CVs on the programming track (CV144, bit 6)</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockReadCVServiceMode" xml:space="preserve">
    <value>Disable reading of CVs on the programming track (CV144, bit 5)</value>
  </data>
  <data name="FrameSecurityZIMOUpdateLockTitle" xml:space="preserve">
    <value>Programming and update locks</value>
  </data>
  <data name="FrameSettingsAppLanguageDescription" xml:space="preserve">
    <value>Display language</value>
  </data>
  <data name="FrameSettingsAppLanguageEnglish" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="FrameSettingsAppLanguageGerman" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="FrameSettingsAppLanguageLabel" xml:space="preserve">
    <value>Buttons, menus and other control elements are displayed in this language (restart is required).</value>
  </data>
  <data name="FrameSettingsDisplayTitle" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="FrameSettingsButtonCheckDeqSpecLabel" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="FrameSettingsButtonCheckDeqSpecTooltip" xml:space="preserve">
    <value>Checks the structure and layout of the decoder specifications.</value>
  </data>
  <data name="FrameSettingsButtonConnectLabel" xml:space="preserve">
    <value>Test connection</value>
  </data>
  <data name="FrameSettingsClose" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="FrameSettingsDecoderDetectionDescription" xml:space="preserve">
    <value>If this option is activated, the decoder specification is automatically selected when a decoder is read out.</value>
  </data>
  <data name="FrameSettingsDecoderDetectionLabel" xml:space="preserve">
    <value>Automatic decoder detection</value>
  </data>
  <data name="FrameSettingsDecoderDetectionTitel" xml:space="preserve">
    <value>Automatic decoder detection</value>
  </data>
  <data name="FrameSettingsDecSpecFolderDescription" xml:space="preserve">
    <value>This folder contains your personal decoder specifications.</value>
  </data>
  <data name="FrameSettingsDecSpecFolderTitle" xml:space="preserve">
    <value>Decoder specifications</value>
  </data>
  <data name="FrameSettingsLoggingEnableDisable" xml:space="preserve">
    <value>Enable logging</value>
  </data>
  <data name="FrameSettingsLoggingFolder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="FrameSettingsLoggingTitle" xml:space="preserve">
    <value>Logging</value>
  </data>
  <data name="FrameSettingsResetButtonLabel" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="FrameSettingsResetLabel" xml:space="preserve">
    <value>Reset the settings to the program's default settings.</value>
  </data>
  <data name="FrameSettingsResetTitle" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="FrameSettingsZ21IPAddressDescription" xml:space="preserve">
    <value>Enter the current IP address of your Z21 digital command station. The factory setting is 192.168.0.111.</value>
  </data>
  <data name="FrameSettingsZ21IPAddressPlaceholder" xml:space="preserve">
    <value>Z21 ip address</value>
  </data>
  <data name="FrameSettingsZ21TimeoutDescription" xml:space="preserve">
    <value>Specify here how long you want to wait for a response from your Z21 digital center.</value>
  </data>
  <data name="FrameSoundBreakSquealLevelLabel" xml:space="preserve">
    <value>Threshold for brake squeal (CV287)</value>
  </data>
  <data name="FrameSoundBreakSquealLevelTitel" xml:space="preserve">
    <value>The brake squeal should start when the speed falls below a certain level during deceleration.</value>
  </data>
  <data name="FrameSoundBreakSquealTitle" xml:space="preserve">
    <value>Brake squeal</value>
  </data>
  <data name="FrameSoundDurationNoiseReduction" xml:space="preserve">
    <value>Duration of noise reduction during deceleration (CV285)</value>
  </data>
  <data name="FrameSoundMaxVolumeFuncKeysLabel" xml:space="preserve">
    <value>Maximum volume for a volume change using the volume up button (CV395)</value>
  </data>
  <data name="FrameSoundMaxVolumeFuncKeysTooltip" xml:space="preserve">
    <value>The value 64 corresponds to 100 % volume. Be careful if you use higher values.</value>
  </data>
  <data name="FrameSoundOverallVolumeTitle" xml:space="preserve">
    <value>Total volume (CV266)</value>
  </data>
  <data name="FrameSoundStartUpDelayLabel" xml:space="preserve">
    <value>Start-up delay (CV273)</value>
  </data>
  <data name="FrameSoundTimesTitle" xml:space="preserve">
    <value>Times</value>
  </data>
  <data name="FrameSoundVolumeAccelerationLabel" xml:space="preserve">
    <value>Volume during acceleration (CV283)</value>
  </data>
  <data name="FrameSoundVolumeDecelerationLabel" xml:space="preserve">
    <value>Volume during deceleration (CV286)</value>
  </data>
  <data name="FrameSoundVolumeEandDieselLocomotiveTitle" xml:space="preserve">
    <value>Electric and diesel locomotives</value>
  </data>
  <data name="FrameSoundVolumeElectroDieselLocomotiveTitle" xml:space="preserve">
    <value>Volume settings for diesel and electric locomotives</value>
  </data>
  <data name="FrameSoundVolumeElectroLocoDependedSpeedLabel" xml:space="preserve">
    <value>Volume depending on the speed (CV298)</value>
  </data>
  <data name="FrameSoundVolumeElectroLocomotiveLabel" xml:space="preserve">
    <value>Volume of an electric motor (CV296)</value>
  </data>
  <data name="FrameSoundVolumeFastSpeedNoLoadLabel" xml:space="preserve">
    <value>Fast speed without load (CV276)</value>
  </data>
  <data name="FrameSoundVolumeLabel" xml:space="preserve">
    <value>Configure general volume settings which are independent of the drive type.</value>
  </data>
  <data name="FrameSoundVolumeLowSpeedNoLoadLabel" xml:space="preserve">
    <value>Volume at slow speed without load (CV275)</value>
  </data>
  <data name="FrameSoundVolumeSteamLocomotiveTitle" xml:space="preserve">
    <value>Volume settings for steam locomotives</value>
  </data>
  <data name="FrameSoundVolumeTitle" xml:space="preserve">
    <value>General volume settings</value>
  </data>
  <data name="FrameSoundVolumeTooltip" xml:space="preserve">
    <value>The value 64 corresponds to 100 % volume. Be careful if you use higher values.</value>
  </data>
  <data name="FrameSpeedStepsSystemDescription" xml:space="preserve">
    <value>The speed step system determines the maximum number of possible speed steps. The higher the maximum number of speed steps, the more sensitively a locomotive can be controlled.</value>
  </data>
  <data name="FrameSpeedStepsSystemLabel" xml:space="preserve">
    <value>Speed step system (CV29.1)</value>
  </data>
  <data name="FrameSpeedStepsSystemTitle" xml:space="preserve">
    <value>Speed steps system</value>
  </data>
  <data name="FunctionKeysNotDefined" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="FyoutItemMotorCharacteristicsText" xml:space="preserve">
    <value>Motor characteristics</value>
  </data>
  <data name="LightEffectTooltip" xml:space="preserve">
    <value>No effect = 0
Dimmung up and down = 88
</value>
  </data>
  <data name="LightEffectTypeDimmingUpAndDown" xml:space="preserve">
    <value>Dimming up and down</value>
  </data>
  <data name="ZIMOEffectTypeNoEffect" xml:space="preserve">
    <value>No effect</value>
  </data>
  <data name="NO" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PopupButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="PopUpMessageDownloadDecoder" xml:space="preserve">
    <value>Data is written to the decoder</value>
  </data>
  <data name="PopUpMessageUploadDecoder" xml:space="preserve">
    <value>Data is read from the decoder</value>
  </data>
  <data name="UserDefinedNotesPlaceholder" xml:space="preserve">
    <value>Here you can insert your personal notes</value>
  </data>
  <data name="YES" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ZIMOErrorCode0" xml:space="preserve">
    <value>No error (CV30 = 0)</value>
  </data>
  <data name="ZIMOErrorCode1" xml:space="preserve">
    <value>DC voltage outside the expected range (CV30 = 1)</value>
  </data>
  <data name="ZIMOErrorCode17" xml:space="preserve">
    <value>Audio output stage does not respond (only MS990, CV30 = 17)</value>
  </data>
  <data name="ZIMOErrorCode2" xml:space="preserve">
    <value>3.3 V supply outside the expected range (CV30 = 2)</value>
  </data>
  <data name="ZIMOErrorCode3" xml:space="preserve">
    <value>Temperature outside the expected range (CV30 = 3)</value>
  </data>
  <data name="ZIMOErrorCode36" xml:space="preserve">
    <value>Motor output stage defective / no motor (CV30 = 36)</value>
  </data>
  <data name="ZIMOErrorCode4" xml:space="preserve">
    <value>Left rail voltage outside the expected range (CV30 = 4)</value>
  </data>
  <data name="ZIMOErrorCode49" xml:space="preserve">
    <value>Overtemperature during operation (can also occur without starting the self-test, CV30 = 49)</value>
  </data>
  <data name="ZIMOErrorCode5" xml:space="preserve">
    <value>Right rail voltage outside the expected range (CV30 = 5)</value>
  </data>
  <data name="ZIMOErrorCode50" xml:space="preserve">
    <value>FA overcurrent during operation (can also occur without starting the self-test, CV30 = 50)</value>
  </data>
  <data name="ZIMOErrorCode51" xml:space="preserve">
    <value>Motor overcurrent during operation (can also occur without starting the self-test, CV30 = 51)</value>
  </data>
  <data name="ZIMOErrorCode6" xml:space="preserve">
    <value>Rail voltages outside the expected range (CV30 = 6)</value>
  </data>
  <data name="ZIMOErrorCodeUnknown" xml:space="preserve">
    <value>(unknown error)</value>
  </data>
  <data name="ZIMOMappingTypeExtended" xml:space="preserve">
    <value>Extended (without shifting left)</value>
  </data>
  <data name="ZIMOMappingTypeRCN225" xml:space="preserve">
    <value>Standard (RCN225 compatible)</value>
  </data>
  <data name="ZIMOMappingTypeUnknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="ZimoMotorControlFreqTypeHigh" xml:space="preserve">
    <value>High frequency</value>
  </data>
  <data name="ZimoMotorControlFreqTypeLow" xml:space="preserve">
    <value>Low frequency</value>
  </data>
  <data name="DownloadNewSettingsYesNoSimple" xml:space="preserve">
    <value>Do you want to transfer the settings to your decoder now?</value>
  </data>
  <data name="FrameFunctionKeysSoundMuteInvertLabel" xml:space="preserve">
    <value>The function of the function button for fading in and out is inverted (CV313)</value>
  </data>
  <data name="LocoListTitle" xml:space="preserve">
    <value>Locomotive list</value>
  </data>
  <data name="FrameSettingsAppLocoListTitle" xml:space="preserve">
    <value>Locomotive list</value>
  </data>
  <data name="FrameSettingsAppLocoListFileSystem" xml:space="preserve">
    <value>File system</value>
  </data>
  <data name="FrameSettingsAppLocoListRocrail" xml:space="preserve">
    <value>Rocrail</value>
  </data>
  <data name="FrameSettingsAppLocoListLabel" xml:space="preserve">
    <value>Train controller software</value>
  </data>
  <data name="FrameSettingsAppLocoListRocrailAddrLabel" xml:space="preserve">
    <value>IP address</value>
  </data>
  <data name="FrameSettingsAppLocoListRocrailPortLabel" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="FrameSettingsAppLocoListRocrailAddrPlaceHolder" xml:space="preserve">
    <value>Rocrail IP address</value>
  </data>
  <data name="FrameSettingsAppLocoListRocrailPortPlaceHolder" xml:space="preserve">
    <value>Rocrail port number</value>
  </data>
  <data name="FrameSettingsAppLocoListFileSystemFolderLabel" xml:space="preserve">
    <value>Directory of your Z2X files</value>
  </data>
  <data name="FrameSettingsAppLocoListFileSystemFolderPlaceHolder" xml:space="preserve">
    <value>The Z2X files folder</value>
  </data>
  <data name="FrameSettingsAppLocoListNoTrainControllerNotAvailable" xml:space="preserve">
    <value>Not available</value>
  </data>
  <data name="FrameSettingsAppLocoListFileSystemSelectFolder" xml:space="preserve">
    <value>Select folder</value>
  </data>
  <data name="AlertLocoListEmpty" xml:space="preserve">
    <value>The locomotive list is empty. Check the following settings:

• Is the Z2X directory configured correctly?
• Is a Z2X file available?
• Is your control software accessible?
</value>
  </data>
  <data name="FrameProtocolOperatingModesTitle" xml:space="preserve">
    <value>Digital operating Modes</value>
  </data>
  <data name="FrameProtocolAnalogDCLabel" xml:space="preserve">
    <value>Activate DC direct current operating mode (CV12.0)</value>
  </data>
  <data name="FrameProtocolAnalogACLabel" xml:space="preserve">
    <value>Activate AC alternating current operating mode (CV12.4)</value>
  </data>
  <data name="FrameProtocolDCCModeLabel" xml:space="preserve">
    <value>DCC (CV12.2)</value>
  </data>
  <data name="FrameProtocolMMModeLabel" xml:space="preserve">
    <value>Märklin Motorola MM (CV12.5)</value>
  </data>
  <data name="FrameProtocolMFXModeLabel" xml:space="preserve">
    <value>MFX (CV12.6)</value>
  </data>
  <data name="FrameProtocolDCCModeZIMOTooltip" xml:space="preserve">
    <value>DCC cannot be switched off with ZIMO decoders</value>
  </data>
  <data name="FrameProtocolOperatingModesDescription" xml:space="preserve">
    <value>Here you can switch the available digital operating modes of the decoder on and off. It is recommended that you only activate the operating modes that are actually used.</value>
  </data>
  <data name="LicenseText" xml:space="preserve">
    <value>Z2X Programmer is an application for configuring locomotive and function decoders with the aid of a Roco / Fleischmann Z21 compatible digital central unit.
The application is aimed at beginners who want to configure the most important functions of their decoders in a simple and intuitive way.

1) Z2X-Programmer is open source software licensed under the GNU General Public License v3.

2) The release of Z2X-Programmer is made WITHOUT ANY WARRANTY - even without theimplied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   

3) Use of Z2X-Programmer is at your own risk and peril.

4) Disclaimer: The author of the software cannot be held responsible for any damage damage caused by the use of this program on computers, model railroads or elsewhere.

5) Disclaimer of warranty: There is no warranty for the program.

6) Click on the button "Open license ..." to open the GNU General Public License v3.</value>
  </data>
  <data name="AlertLocoListNotReachable" xml:space="preserve">
    <value>The locomotive list could not be opened. Please check the configuration. Error message: </value>
  </data>
  <data name="AlertLocoListZ2XFolderEmpty" xml:space="preserve">
    <value>The Z2X files directory has not yet been configured. Open the settings and select your Z2X files directory.</value>
  </data>
  <data name="AlertLocoListZ2XFolderNotExist" xml:space="preserve">
    <value>The directory of your Z2X files does not exist: </value>
  </data>
  <data name="LocolistButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="AlertLocoListNoLocoSelected" xml:space="preserve">
    <value>No locomotive selected.</value>
  </data>
  <data name="FrameExpertCVListDescription" xml:space="preserve">
    <value>This list shows the value and status of all configuration variables that are supported by the selected decoder specification. </value>
  </data>
  <data name="FrameExpertCVHeaderCVNumber" xml:space="preserve">
    <value>Configuration variable</value>
  </data>
  <data name="FrameExpertCVHeaderCVValue" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="LocoListColumnHeaderName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LocoListColumnHeaderAdress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AlertLocoListZ2XFolderNotAccessible" xml:space="preserve">
    <value>The selected folder is not accessible for Z2X-Programmer. Please select a different folder.</value>
  </data>
  <data name="LocoListColumnHeaderImage" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ZIMOBootloaderNotFailSafe" xml:space="preserve">
    <value>The fail-safe function of this bootloader is inadequate. It is strongly recommended to update the firmware.</value>
  </data>
  <data name="ZIMOBootloaderIsFailSafe" xml:space="preserve">
    <value>The fail-safe function is fully supported by this bootloader version.</value>
  </data>
  <data name="FrameDecoderZIMOInfoSoundProjectNr" xml:space="preserve">
    <value>Sound project number (CV254, CV255, CV256, CV257)</value>
  </data>
  <data name="AlertReadCVError" xml:space="preserve">
    <value>The configuration variable could not be read. </value>
  </data>
  <data name="AlertWriteCVError" xml:space="preserve">
    <value>The configuration variable could not be written. </value>
  </data>
  <data name="FrameProtocolZIMOSUSITitle" xml:space="preserve">
    <value>SUSI outputs</value>
  </data>
  <data name="FrameProtocolZIMOSUSIPinClockLabel" xml:space="preserve">
    <value>Function of the first SUSI interface (CV201)</value>
  </data>
  <data name="FrameProtocolZIMOSUSIPinDataLabel" xml:space="preserve">
    <value>Function output SUSI data (CV201):</value>
  </data>
  <data name="ZIMOSusiPinTypeLogicLevelOutput" xml:space="preserve">
    <value>Logic level output</value>
  </data>
  <data name="ZIMOSusiPinTypeLogicLevelReedInput" xml:space="preserve">
    <value>Logic level input</value>
  </data>
  <data name="ZIMOSusiPinTypeServo" xml:space="preserve">
    <value>Servo</value>
  </data>
  <data name="ZIMOSusiPinTypeSUSI" xml:space="preserve">
    <value>Standard SUSI</value>
  </data>
  <data name="ZIMOSusiPinTypeI2C" xml:space="preserve">
    <value>I2C</value>
  </data>
  <data name="FlyoutItemFunctionOutputsTitle" xml:space="preserve">
    <value>Function outputs</value>
  </data>
  <data name="ZIMOSusiPinTypeUnknown" xml:space="preserve">
    <value>Unknown configuration</value>
  </data>
  <data name="FrameProtocolZIMOSUSIDescription" xml:space="preserve">
    <value>The outputs of the SUSI interfaces can also take on other functions if required. Configure the required functionality here.</value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingTitle" xml:space="preserve">
    <value>Function key assignment </value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingDescription" xml:space="preserve">
    <value>By adapting the key assignment on the control unit, a function button can activate any internal button on the decoder.</value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingEdit" xml:space="preserve">
    <value>Change assignment ...</value>
  </data>
  <data name="FrameFunctionKeysZIMONoMappingSelected" xml:space="preserve">
    <value>No function key selected.</value>
  </data>
  <data name="PopUpInputMappingDescription" xml:space="preserve">
    <value>Select the desired button assignment.</value>
  </data>
  <data name="ZIMOInputMappingDirectMapping" xml:space="preserve">
    <value>Ident with decoder</value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingHeaderTitleController" xml:space="preserve">
    <value>Function key on the control unit
(e.g. multiMAUS, ᴡʟᴀɴMAUS, etc.)</value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingHeaderTitleCV" xml:space="preserve">
    <value>Number of the configuration variable </value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingHeaderTitleDecoder" xml:space="preserve">
    <value>Function key in the decoder</value>
  </data>
  <data name="ButtonMainMenuWriteDecoderDiffText" xml:space="preserve">
    <value>Writes modified values to the decoder</value>
  </data>
  <data name="AlertNoModifiedValuesFound" xml:space="preserve">
    <value>There are no modified settings. No download is being performed.</value>
  </data>
  <data name="FrameFunctionsKeysZIMOMappingTypeLabel" xml:space="preserve">
    <value>Assign function outputs to the function keys. If a function key is pressed, the assigned function output is switched. You can also activate an extended version of the assignment. With this extended version, higher function keys can also switch lower function outputs.</value>
  </data>
  <data name="FrameFunctionOutputsNamingHeaderTitleID" xml:space="preserve">
    <value>Function output</value>
  </data>
  <data name="FrameFunctionOutputsNamingHeaderTitleDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="FrameFunctionOutputsNamingTitle" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="FrameFunctionOutputsNamingDescription" xml:space="preserve">
    <value>In the following table, you can assign any description to each function output.</value>
  </data>
  <data name="FrameFunctionOutputsGetNamingTitle" xml:space="preserve">
    <value>Function output</value>
  </data>
  <data name="FrameFunctionOutputsGetNamingDescription" xml:space="preserve">
    <value>Enter any description:
</value>
  </data>
  <data name="DownloadAllSettingsYesNo" xml:space="preserve">
    <value>Would you now like to transfer all known settings to the decoder?</value>
  </data>
  <data name="FrameSettingsExpertTitle" xml:space="preserve">
    <value>Settings for experts</value>
  </data>
  <data name="FrameSettingsQuitOnReadError" xml:space="preserve">
    <value>Cancel the readout of a decoder if a CV cannot be read</value>
  </data>
  <data name="AlertDecoderUploadErrorPart2Direct" xml:space="preserve">
    <value>Check the following settings:

•  Is there a network connection to your digital central unit?
•  Programming method correctly selected?</value>
  </data>
  <data name="FrameExpertSettingsEnableDisableCV" xml:space="preserve">
    <value>Activate / Deactivate</value>
  </data>
  <data name="FrameExpertSettingsNoCVSelected" xml:space="preserve">
    <value>No configuration variable is selected. </value>
  </data>
  <data name="FrameSecondaryAddressPlaceholder" xml:space="preserve">
    <value>Secondary address</value>
  </data>
  <data name="SwitchStateOn" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="SwitchStateOff" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="FrameFunctionKeysMappingSecondaryAddressTitle" xml:space="preserve">
    <value>Function outputs</value>
  </data>
  <data name="FrameFunctionKeysMappingSecondaryAddressDescription" xml:space="preserve">
    <value>Function outputs can be assigned to the function keys that are addressed using the second address.</value>
  </data>
  <data name="FunctionKeysVehicleAddressTabTitle" xml:space="preserve">
    <value>Vehicle address</value>
  </data>
  <data name="FunctionKeysSecondaryAddressTabTitle" xml:space="preserve">
    <value>Secondary address</value>
  </data>
  <data name="AlertSecondaryAddressNotSupported" xml:space="preserve">
    <value>The second address feature is not supported by this decoder.</value>
  </data>
  <data name="InfoConnectionToDigitalCommandStation" xml:space="preserve">
    <value>A connection is established with your digital center (IP address:</value>
  </data>
  <data name="AlertDigitalCommandStationNoReachablePart1" xml:space="preserve">
    <value>The connection with your digital center cannot be established. Is the IP address</value>
  </data>
  <data name="AlertDigitalCommandStationNoReachablePart2" xml:space="preserve">
    <value>correct?</value>
  </data>
  <data name="FrameSettingsAdditionalDisplayOfCVValues" xml:space="preserve">
    <value>Additional display of current CV values</value>
  </data>
  <data name="FrameSettingsDisplayDescription" xml:space="preserve">
    <value>Customize the display of Z2X-Programmer.

⚠ Changes are applied after a restart.</value>
  </data>
  <data name="DownloadDataTitle" xml:space="preserve">
    <value>Writing settings to the decoder</value>
  </data>
  <data name="DownloadDataColumnHeaderCVNumber" xml:space="preserve">
    <value>CV number</value>
  </data>
  <data name="DownloadDataColumnHeaderCVZ2XValue" xml:space="preserve">
    <value>New value after download</value>
  </data>
  <data name="DownloadDataColumnHeaderCVDecoderValue" xml:space="preserve">
    <value>Current decoder value</value>
  </data>
  <data name="DownloadDataButtonOK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DownloadDataButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FrameSettingsAppLocoListDescription" xml:space="preserve">
    <value>The locomotive list gives you quick access to your Z2X projects. You can use the following settings to adjust the behavior of the locomotive list.</value>
  </data>
  <data name="FrameProtocolZIMODCCModeInfo" xml:space="preserve">
    <value>The DCC operating mode cannot be deactivated for ZIMO decoders.</value>
  </data>
  <data name="AlertDataInBackupAreNotFromDecoder" xml:space="preserve">
    <value>⚠ The displayed decoder values originate from a Z2X project file. It is possible that these values are no longer up to date. Load the settings from the decoder to obtain reliable current values.</value>
  </data>
  <data name="FrameGettingStartedTitle" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="FrameGettingStartedDescription" xml:space="preserve">
    <value>Z2X-Programmer requires an active connection to your digital control center. This connection must be configured before the first start.</value>
  </data>
  <data name="FrameGettingStartedStep1" xml:space="preserve">
    <value>Switch to the tab </value>
  </data>
  <data name="FrameGettingStartedStep2" xml:space="preserve">
    <value>Scroll to the section </value>
  </data>
  <data name="FrameGettingStartedStep3" xml:space="preserve">
    <value>Enter the IP address of your digital command station.</value>
  </data>
  <data name="FrameGettingStartedStep4" xml:space="preserve">
    <value>Click on the button </value>
  </data>
  <data name="FrameGettingStartedStep11" xml:space="preserve">
    <value>Settings.</value>
  </data>
  <data name="FrameGettingStartedStep21" xml:space="preserve">
    <value>Digital command station Z21.</value>
  </data>
  <data name="FrameGettingStartedStep41" xml:space="preserve">
    <value>Test connection.</value>
  </data>
  <data name="FrameGettingStartedIntroduction" xml:space="preserve">
    <value>Carry out the following steps after starting Z2X-Programmer for the first time:</value>
  </data>
  <data name="FrameFunctionKeysZIMOInputMappingHeaderTitleValue" xml:space="preserve">
    <value>Value of the configuration variable </value>
  </data>
  <data name="ButtonMainMenuUndo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="ButtonMainMenuRedo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="FrameInfoOpenProjectHomepage" xml:space="preserve">
    <value>Open homepage ...</value>
  </data>
  <data name="FrameSettingsAppUserDecSpecFolderSelectFolder" xml:space="preserve">
    <value>Select directory</value>
  </data>
  <data name="AlertDeqSpecFolderNotAccessible" xml:space="preserve">
    <value>The selected folder is not accessible for Z2X-Programmer. Please select a different folder.</value>
  </data>
  <data name="AlertDecSpecNotFound" xml:space="preserve">
    <value>The decoder specification was not found:</value>
  </data>
  <data name="LightEffectDirectionTypeIndepend" xml:space="preserve">
    <value>Direction-independent</value>
  </data>
  <data name="LightEffectDirectionTypeForward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="LightEffectDirectionTypeBackward" xml:space="preserve">
    <value>Backward</value>
  </data>
  <data name="LightEffectTypeSinglePulseStrobe" xml:space="preserve">
    <value>Single pulse strobe</value>
  </data>
  <data name="LightEffectTypeDoublePulseStrobe" xml:space="preserve">
    <value>Double pulse strobe</value>
  </data>
  <data name="LightEffectTypeRotaryBeacon" xml:space="preserve">
    <value>Rotary beacon</value>
  </data>
  <data name="LightEffectTypeDecoupler" xml:space="preserve">
    <value>Decoupler</value>
  </data>
  <data name="LightEffectTypeSoftStart" xml:space="preserve">
    <value>Soft start</value>
  </data>
  <data name="LightEffectTypeFunctionOutputTurnsOffAtSpeed" xml:space="preserve">
    <value>Turns off at speed</value>
  </data>
  <data name="LightEffectTypeFunctionOutputFluorescentTubeEffect" xml:space="preserve">
    <value>Fluorescent tube</value>
  </data>
  <data name="FrameLightDimmingOutputFA1" xml:space="preserve">
    <value>Effect, output FA1 (CV127)</value>
  </data>
  <data name="LightEffectTypeFunctionOutputUnknown" xml:space="preserve">
    <value>Unknown effect</value>
  </data>
  <data name="FrameLightDimmingOutputFA2" xml:space="preserve">
    <value>Effect, output FA2 (CV128)</value>
  </data>
  <data name="FrameLightDimmingOutputFA3" xml:space="preserve">
    <value>Effect, output FA3 (CV129)</value>
  </data>
  <data name="FrameLightDimmingOutputFA4" xml:space="preserve">
    <value>Effect, output FA4 (CV130)</value>
  </data>
  <data name="FrameLightDimmingOutputFA5" xml:space="preserve">
    <value>Effect, output FA5 (CV131)</value>
  </data>
  <data name="FrameLightDimmingOutputFA6" xml:space="preserve">
    <value>Effect, output FA6 (CV132)</value>
  </data>
  <data name="FrameLightDimmingOutputFA7" xml:space="preserve">
    <value>Effect, output FA7 (CV133)</value>
  </data>
  <data name="FrameLightDimmingOutputFA8" xml:space="preserve">
    <value>Effect, output FA8 (CV134)</value>
  </data>
  <data name="LocoListColumnHeaderZ2XAvailable" xml:space="preserve">
    <value>Z2X file</value>
  </data>
  <data name="ExtendedMenuItemSaveAs" xml:space="preserve">
    <value>Save as ...</value>
  </data>
  <data name="ExtendedMenuItemRedo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="AlertNoDataToSave" xml:space="preserve">
    <value>No Z2X project is open. The project cannot be saved.</value>
  </data>
  <data name="ExtendedMenuItemTitle" xml:space="preserve">
    <value>Extended toolbar</value>
  </data>
  <data name="AlertNoRedoAvailable" xml:space="preserve">
    <value>No commands can currently be repeated.</value>
  </data>
  <data name="ExtendedMenuItemReportProblem" xml:space="preserve">
    <value>Report a problem ...</value>
  </data>
  <data name="FrameLightEffectsTimingTitle" xml:space="preserve">
    <value>Here you can set fade-in and fade-out times for the “Fade in and fade out” light effect.</value>
  </data>
  <data name="FrameLightEffectsTimingTitleMX" xml:space="preserve">
    <value>Here you can set fade-in and fade-out times for the “Fade in and fade out” light effect.</value>
  </data>
  <data name="FrameLightEffectFadeInTimeLabel" xml:space="preserve">
    <value>Fade-In time (CV190)</value>
  </data>
  <data name="FrameLightEffectFadeOutTimeLabel" xml:space="preserve">
    <value>Fade-Out time (CV191)</value>
  </data>
  <data name="FrameLightEffectFadeOutTimeLabelMX" xml:space="preserve">
    <value>Fade-Out time (CV191)</value>
  </data>
  <data name="FrameMotorCharacteristicsReferenceVoltageAutoModeZimoMS" xml:space="preserve">
    <value>Automatic adjustment to the rail voltage (CV57)</value>
  </data>
  <data name="FrameFunctionKeysMappingDeleteConfig" xml:space="preserve">
    <value>Delete Mapping</value>
  </data>
  <data name="AlertDeleteFunctionMapping" xml:space="preserve">
    <value>Would you like to delete the assignment of the function outputs?</value>
  </data>
  <data name="AlertResetFunctionMapping" xml:space="preserve">
    <value>Do you want to reset the assignment to the default setting?</value>
  </data>
  <data name="FrameFunctionKeysMappingResetConfig" xml:space="preserve">
    <value>Reset Mapping</value>
  </data>
  <data name="FrameFunctionKeysHighBeamDimmingTitle" xml:space="preserve">
    <value>Dipped beam function key</value>
  </data>
  <data name="FrameFunctionKeysHighBeamDimmingDescription" xml:space="preserve">
    <value>Configure here the function outputs that switch to the dimmed state when the F6 or F7 button is pressed (CV119, CV120).</value>
  </data>
  <data name="FrameFunctionKeyHighDippedBeamInvertedLabel" xml:space="preserve">
    <value>Reverse key</value>
  </data>
  <data name="FrameMotorCharacteristicsDHImpulswidthTitle" xml:space="preserve">
    <value>Impuls width</value>
  </data>
  <data name="FrameMotorCharacteristicsDoehlerHaasMaxSpeedLabel" xml:space="preserve">
    <value>Maximum speed (CV5)</value>
  </data>
  <data name="FrameMotorCharacteristicsDoehlerHaasMaxSpeedTitel" xml:space="preserve">
    <value>Maximum speed</value>
  </data>
  <data name="FrameMotorCharacteristicsDoehlerHaasMaxSpeedDefaultEnabled" xml:space="preserve">
    <value>Use the decoder's default value for the maximum speed</value>
  </data>
  <data name="AlertDecoderUploadErrorPart2POM" xml:space="preserve">
    <value>Check the following settings:

- Programming method selected correctly?
- Vehicle address correct?
- Railcom activated in the decoder?
- Is there a network connection to your digital control center?
- Is the locomotive at a standstill?</value>
  </data>
  <data name="FrameRailComDescription" xml:space="preserve">
    <value>RailCom® is a protocol for bidirectional communication between the decoder and the digital central unit. It enables, for example, programming on the main track (POM), recognition of the direction of travel or automatic log-on to the digital control center.</value>
  </data>
  <data name="AlertDecoderInfoCopySuccessFull" xml:space="preserve">
    <value>The information has been copied to the clipboard.</value>
  </data>
  <data name="FrameFunctionKeysZIMOOutputNamingEdit" xml:space="preserve">
    <value>Change description ...</value>
  </data>
  <data name="ControlPanelOpen" xml:space="preserve">
    <value> Open control panel ...</value>
  </data>
  <data name="ControlPanelClose" xml:space="preserve">
    <value>Close control panel ...</value>
  </data>
  <data name="FlyoutItemControllerText" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="OpenControllerWindowNewWindow" xml:space="preserve">
    <value>Open in a new window ...</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabTitle" xml:space="preserve">
    <value>Light suppression on the driver's cab side</value>
  </data>
  <data name="FrameFunctionKeysSectionLight" xml:space="preserve">
    <value>Light functions</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabDescription" xml:space="preserve">
    <value>This function allows you to switch all the lights on one side of the driver's cab on and off at the touch of a button.</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabCab1Label" xml:space="preserve">
    <value>Driver's cab 1, forward (CV107, CV109)</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabCab1Desc" xml:space="preserve">
    <value>💡 Light suppression driver's cab 1, forward</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabCab2Desc" xml:space="preserve">
    <value>💡 Light suppression driver's cab 2, backward</value>
  </data>
  <data name="FrameFunctionKeysLightSuppressionDriverCabCab2Label" xml:space="preserve">
    <value>Driver's cab 2, backwards (CV108, CV110)</value>
  </data>
  <data name="FunctionOutputNotDefined" xml:space="preserve">
    <value>Unused</value>
  </data>
  <data name="FrameLightEffectFadeInTimeLabelMX" xml:space="preserve">
    <value>Fade-In time (CV190)</value>
  </data>
  <data name="FrameFunctionKeysEngineAndDrivingCharacteristicsTitle" xml:space="preserve">
    <value>Engine and driving characteristics</value>
  </data>
  <data name="FrameFunctionKeysEngineAndDrivingCharacteristicsDescription" xml:space="preserve">
    <value>You can use the following function buttons to influence the motor and driving characteristics.</value>
  </data>
  <data name="FrameFunctionKeysShuntingLabel" xml:space="preserve">
    <value>Function key for activating the shunting gear (CV155)</value>
  </data>
  <data name="FrameFunctionKeysShuntingKeyDesc" xml:space="preserve">
    <value>🐌 Activating the shunting gear</value>
  </data>
  <data name="FrameFunctionKeysSoundLouderDesc" xml:space="preserve">
    <value>🎵 Sound louder</value>
  </data>
  <data name="FrameFunctionKeysSoundMuteDesc" xml:space="preserve">
    <value>🎵 Sound fade in/off</value>
  </data>
  <data name="FrameFunctionKeysSoundQuieterDesc" xml:space="preserve">
    <value>🎵 Sound quieter</value>
  </data>
  <data name="FrameFunctionKeysSoundOnOff" xml:space="preserve">
    <value>🎵 Driving and random sounds on/off</value>
  </data>
  <data name="FrameFunctionKeysSoundCurveSquealOnOff" xml:space="preserve">
    <value>🎵 Cornering squeal on/off</value>
  </data>
  <data name="FlyoutItemFunctionKeysFunctionOutputsTitle" xml:space="preserve">
    <value>Function outputs</value>
  </data>
  <data name="FrameFunctionKeysMappingTitleZIMO" xml:space="preserve">
    <value>Function outputs (CV33 - CV46, CV61)</value>
  </data>
  <data name="FrameFunctionKeysMappingTitleDoehlerAndHaass" xml:space="preserve">
    <value>Function outputs (CV33 - CV46, CV61)</value>
  </data>
  <data name="FrameControllerButtonFasterDescription" xml:space="preserve">
    <value>Faster</value>
  </data>
  <data name="FrameControllerButtonSlowerDescription" xml:space="preserve">
    <value>Slower</value>
  </data>
  <data name="FrameControllerButtonForwardDescription" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="FrameControllerButtonBackwardDescription" xml:space="preserve">
    <value>Backward</value>
  </data>
  <data name="FrameExpertSettingsEnableAllCVs" xml:space="preserve">
    <value>Activate all</value>
  </data>
  <data name="AlertSomeCVsAreDisabledUpload" xml:space="preserve">
    <value>Some CVs are currently deactivated and are not loaded.</value>
  </data>
  <data name="AlertSomeCVsAreDisabledDownload" xml:space="preserve">
    <value>Some CVs are currently deactivated, these are not written.</value>
  </data>
  <data name="FrameSpeedStepsCurrentValueLabel" xml:space="preserve">
    <value>The number of speed steps actually used is configured in your digital central unit for each locomotive. Current setting for this locomotive:</value>
  </data>
  <data name="FrameSpeedStepsCurrentValueNotAvailable" xml:space="preserve">
    <value>Decoder readout required</value>
  </data>
  <data name="FlyoutItemFunctionConfigurationTitle" xml:space="preserve">
    <value>Function settings</value>
  </data>
  <data name="FrameFunctionConfigurationUncouplerTitle" xml:space="preserve">
    <value>Automatic uncoupling</value>
  </data>
  <data name="FrameFunctionConfigurationUncouplerFunctionOutputSelectionDescription" xml:space="preserve">
    <value>Use up to 2 function outputs as decouplers. If a function output cannot be configured ⛔, this output is already assigned to another function or effect.</value>
  </data>
  <data name="FrameFunctionConfigurationUncouplerForwardLabel" xml:space="preserve">
    <value>Assignment of the function outputs</value>
  </data>
  <data name="ZIMOEffectTypeDecoupler" xml:space="preserve">
    <value>Decoupler</value>
  </data>
  <data name="ZIMOEffectTypeNoFunctionEffect" xml:space="preserve">
    <value>No function</value>
  </data>
  <data name="ZIMODecouplerEffectEnabled" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ZIMODecouplerEffectDisabled" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="FrameFunctionConfigurationUncouplerFunctionOutputSelectionTableTitle" xml:space="preserve">
    <value>Function outputs</value>
  </data>
  <data name="AlertTooManyDecouplerOutputs" xml:space="preserve">
    <value>Only a maximum of 2 function outputs may be used for decouplers.</value>
  </data>
  <data name="FrameLightEffectsTableHeaderFunctionOutput" xml:space="preserve">
    <value>Function output</value>
  </data>
  <data name="FrameLightEffectsTableHeaderEffectAndDirection" xml:space="preserve">
    <value>Light effect and Direction</value>
  </data>
  <data name="FrameExpertCVListNote" xml:space="preserve">
    <value>⚠ All configuration variables are activated automatically when the decoder specification is changed.</value>
  </data>
  <data name="FrameFunctionKeysSummaryTitle" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="FrameFunctionKeysSummaryDescription" xml:space="preserve">
    <value>Here you can see the current configuration of your function keys.</value>
  </data>
  <data name="FrameFunctionKeysHeaderTitleController" xml:space="preserve">
    <value>Control unit</value>
  </data>
  <data name="FrameFunctionKeysHeaderTitleDecoder" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="FrameFunctionKeysHeaderTitleFunctions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="FrameFunctionKeysHighBeamDimmingF6FuncKeyDesc" xml:space="preserve">
    <value>💡 Dipped beam function key 1</value>
  </data>
  <data name="FrameFunctionKeysHighBeamDimmingF7FuncKeyDesc" xml:space="preserve">
    <value>💡 Dipped beam function key 2</value>
  </data>
  <data name="FrameFunctionKeysOutput1Desc" xml:space="preserve">
    <value>🔌 Function output 1</value>
  </data>
  <data name="FrameFunctionKeysOutput2Desc" xml:space="preserve">
    <value>🔌 Function output 2</value>
  </data>
  <data name="FrameFunctionKeysOutput3Desc" xml:space="preserve">
    <value>🔌 Function output 3</value>
  </data>
  <data name="FrameFunctionKeysOutput4Desc" xml:space="preserve">
    <value>🔌 Function output 4</value>
  </data>
  <data name="FrameFunctionKeysOutput5Desc" xml:space="preserve">
    <value>🔌 Function output 5</value>
  </data>
  <data name="FrameFunctionKeysOutput6Desc" xml:space="preserve">
    <value>🔌 Function output 6</value>
  </data>
  <data name="FrameFunctionKeysOutput7Desc" xml:space="preserve">
    <value>🔌 Function output 7</value>
  </data>
  <data name="FrameFunctionKeysOutput8Desc" xml:space="preserve">
    <value>🔌 Function output 8</value>
  </data>
  <data name="FrameFunctionKeysOutput9Desc" xml:space="preserve">
    <value>🔌 Function output 9</value>
  </data>
  <data name="FrameFunctionKeysOutput10Desc" xml:space="preserve">
    <value>🔌 Function output 10</value>
  </data>
  <data name="FrameFunctionKeysOutput11Desc" xml:space="preserve">
    <value>🔌 Function output 11</value>
  </data>
  <data name="FrameFunctionKeysOutput12Desc" xml:space="preserve">
    <value>🔌 Function output 12</value>
  </data>
  <data name="FrameFunctionKeysOutput0vDesc" xml:space="preserve">
    <value>🔌 Function output 0 - Front</value>
  </data>
  <data name="FrameFunctionKeysOutput0rDesc" xml:space="preserve">
    <value>🔌 Function output 0 - Back</value>
  </data>
  <data name="FrameFunctionKeysRefreshOverview" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="FrameFunctionKeysDescriptionDirectionForward" xml:space="preserve">
    <value>(Forward)</value>
  </data>
  <data name="FrameFunctionKeysDescriptionDirectionBackward" xml:space="preserve">
    <value>(Backward)</value>
  </data>
  <data name="FunctionOutputFront" xml:space="preserve">
    <value>Front</value>
  </data>
  <data name="FunctionOutputRear" xml:space="preserve">
    <value>Rear</value>
  </data>
  <data name="FrameAddressVehicleAddressDetect" xml:space="preserve">
    <value>Read vehicle address</value>
  </data>
  <data name="FrameAddressVehicleAddressDetectNotProgTrack" xml:space="preserve">
    <value>Reading out the vehicle address only works on the programming track.</value>
  </data>
  <data name="AlertAddressNotRead" xml:space="preserve">
    <value>The vehicle address could not be read out.</value>
  </data>
  <data name="ReadVehicleAddressTooltip" xml:space="preserve">
    <value>Reads out the vehicle address of a decoder on the programming track.</value>
  </data>
  <data name="FrameDecoderZIMOInfoSoundManufacturer" xml:space="preserve">
    <value>Sound project manufacturer (CV105, CV106)</value>
  </data>
  <data name="SoundProjectAuthorID" xml:space="preserve">
    <value>Author-ID</value>
  </data>
  <data name="FrameExpertReadCVSetTitle" xml:space="preserve">
    <value>CV-Set</value>
  </data>
  <data name="FrameExpertSettingsCVReadCVSetButton" xml:space="preserve">
    <value>Read CV set</value>
  </data>
  <data name="FilePickerOpenCVSetTitle" xml:space="preserve">
    <value>Select the CV set</value>
  </data>
  <data name="AlertNoCSVFileType" xml:space="preserve">
    <value>The file type of the selected file is unknown or is not CSV. The file will not be opened.</value>
  </data>
  <data name="FrameExpertReadCVSetDescription" xml:space="preserve">
    <value>CV sets are simple CSV files that contain simple commands for configuring CVs. You can use this function to read out these CV sets.</value>
  </data>
  <data name="DisplayAlertUseCVSet" xml:space="preserve">
    <value>Do you want to read in the settings from the CV set? Existing values are overwritten.</value>
  </data>
  <data name="DisplayAlertCVSetUsedSuccessfully" xml:space="preserve">
    <value>The CV set was successfully read out.</value>
  </data>
  <data name="AlertVehicleAddressRead" xml:space="preserve">
    <value>The following vehicle address was read:</value>
  </data>
</root>